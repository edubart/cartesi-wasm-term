-- This file contains all code related to the audio subsystem.

##[[
pragma{
  nogc=true,
  nochecks=true
}

-- cartesi machine
cflags '-I./cartesi-machine-v0.15.2_wasm/include'
ldflags '-L./cartesi-machine-v0.15.2_wasm/lib'

-- basic flags
cflags '-sTOTAL_MEMORY=268435456 -sNO_DISABLE_EXCEPTION_CATCHING=1'
cflags '-sNO_EXIT_RUNTIME=1 -sFORCE_FILESYSTEM=1'
cflags '-O3 -g0'

-- embed files
cflags '--embed-file ./images'
]]

require 'io'
require 'cartesi-machine'

-- rootfs flash drive
local flash_drive_entries: [1]cm_memory_range_config = {{
  start = 0x90000000000000,
  length = (@uint64)(-1),
  image_filename = "images/rootfs-v0.18.0.ext2",
}}

-- set config
local config = CartesiMachine.get_default_config()
config.ram = {
  image_filename = 'images/linux-5.15.63-ctsi-2-v0.17.0.bin',
  length = 64*1024*1024 -- 64MB
}
config.rom = {
  image_filename = 'images/rom-v0.17.0.bin',
  bootargs = "\z
    console=hvc0 \z
    rootfstype=ext2 \z
    root=/dev/mtdblock0 \z
    rw quiet \z
    swiotlb=noforce \z
    mtdparts=flash.0:-(root) \z
    init=/opt/cartesi/bin/init \z
    TERM=xterm COLUMNS=120 LINES=40 single=yes -- sh"
}
config.htif = {
  yield_automatic = true,
  console_getchar = true,
}
config.flash_drive = {
  count = 1,
  entry = &flash_drive_entries,
}

local machine = CartesiMachine.create(config)
machine:run()
io.stdout:printf("Halted\n")
io.stdout:printf('Cycles %d\n', machine:read_mcycle())
